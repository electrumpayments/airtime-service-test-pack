{
	"variables": [],
	"info": {
		"name": "Airtime",
		"_postman_id": "9a1c68de-48ef-3987-d02a-8d2d41b37892",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Confirmations",
			"description": "Voucher confirmations",
			"item": [
				{
					"name": "Provision request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar thirdPartyIds = jsonData.thirdPartyIdentifiers\npostman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);\n\nvar voucher = jsonData.voucher;\npostman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);\npostman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"paymentMethods\" : [\n        {\n            \"type\": \"{{loyaltyCardPaymentType}}\",\n            \"name\": \"{{loyaltyCardPaymentName}}\",\n            \"amount\": {\n                \"amount\": {{airtimePaymentAmount}},\n                \"currency\": \"{{randCurrencyCode}}\"\n            },\n            \"cardNumber\": \"{{loyaltyCardNumber}}\"\n        }\n    ]\n}"
						},
						"description": "Voucher provision request"
					},
					"response": []
				},
				{
					"name": "Confirmation of prior voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");\ntests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");\ntests[\"Third party identifiers\"] = jsonData.id !== null;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar voidId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", voidId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
						},
						"description": "Voucher confirmation advice"
					},
					"response": []
				}
			]
		},
		{
			"name": "Error responses",
			"description": "",
			"item": [
				{
					"name": "Reversal of non-provisioned voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";\ntests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Reversal ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"reversalId\");\ntests[\"Request Type correct\"] = errorDetail.requestType === \"VOUCHER_REVERSAL\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\npostman.setEnvironmentVariable(\"requestTime\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
						},
						"description": "Voucher reversal advice for a provision which was never processed by the vendor."
					},
					"response": []
				},
				{
					"name": "Confirmation of non-provisioned voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\nvar errorDetail = JSON.parse(responseBody);\ntests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";\ntests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Confirmation ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"confirmationId\");\ntests[\"Request Type correct\"] = errorDetail.requestType === \"VOUCHER_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\nvar confirmationId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", confirmationId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"123\"\n    }\n}"
						},
						"description": "Failed attempt to confirm a voucher which wasn't provisioned."
					},
					"response": []
				},
				{
					"name": "Provision request copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar thirdPartyIds = jsonData.thirdPartyIdentifiers\npostman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);\n\nvar voucher = jsonData.voucher;\npostman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);\npostman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "Voucher provision request"
					},
					"response": []
				},
				{
					"name": "Confirmation of prior voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar confirmationId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", confirmationId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
						},
						"description": "Voucher confirmation advice"
					},
					"response": []
				},
				{
					"name": "Reversal of confirmed voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is ACCOUNT_ALREADY_SETTLED\"] = jsonData.errorType === \"ACCOUNT_ALREADY_SETTLED\";\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REVERSAL\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
						},
						"description": "Failed attempt to reverse a voucher which has been confirmed."
					},
					"response": []
				},
				{
					"name": "Provision request copy copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar thirdPartyIds = jsonData.thirdPartyIdentifiers\npostman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);\n\nvar voucher = jsonData.voucher;\npostman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);\npostman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "Voucher provision request"
					},
					"response": []
				},
				{
					"name": "Reversal of prior voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
						},
						"description": "Voucher reversal"
					},
					"response": []
				},
				{
					"name": "Confirmation of reversed voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is ACCOUNT_ALREADY_SETTLED\"] = jsonData.errorType === \"ACCOUNT_ALREADY_SETTLED\";\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar confirmationId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", confirmationId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
						},
						"description": "Failed attempt to confirm a reversed voucher."
					},
					"response": []
				},
				{
					"name": "Duplicate provision request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is DUPLICATE_RECORD\"] = jsonData.errorType === \"DUPLICATE_RECORD\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\n//don't update the UUID for this test\n//postman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "Voucher provision request with a non-unique UUID"
					},
					"response": []
				},
				{
					"name": "Username Client.Id mismatch",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "wrongUsername",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic d3JvbmdVc2VybmFtZTpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "Voucher provision request which mismatched HTTP Basic Auth username and Client.Id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Missing field tests",
			"description": "Messages intended to test that the server correctly identifies a missing field in a message to the server.",
			"item": [
				{
					"name": "Missing voucher ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\n//null ID can't be checked\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing product",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing product.productId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing time",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.merchant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.merchant.merchantId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.merchant.merchantName",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\"\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing merchantName.name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing merchantName.city",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing merchantName.region",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing merchantName.country",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.merchant.merchantType",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.terminalId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.institution",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.institution.id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing originator.institution.name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing client",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing client.id",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing client.name",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"No original ID returned\"] = jsonData.originalId == null;\ntests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing reversal ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\n//missing reversal ID can't be checked\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REVERSAL\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing request ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");\n//missing request ID can't be checked\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REVERSAL\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing reversal time",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REVERSAL\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing reversal reason",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REVERSAL\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing confirmation ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\n//missing confirmation ID can't be checked\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar voidId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", voidId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing confirmation request ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");\n//missing request ID can't be checked\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar voidId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", voidId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing confirmation time",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar voidId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", voidId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing confirmation voucher",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar voidId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", voidId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Missing confirmation voucher serial number",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";\ntests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");\ntests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_CONFIRMATION\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar voidId = uuid();\npostman.setEnvironmentVariable(\"confirmationId\", voidId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Provisions",
			"description": "",
			"item": [
				{
					"name": "Minimalist provision request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Voucher ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");\n\nvar voucher = jsonData.voucher;\ntests[\"Voucher present\"] = voucher !== null;\ntests[\"Voucher serial number present\"] = voucher.serialNumber !== null;\ntests[\"Voucher pin present\"] = voucher.pin !== null;\ntests[\"Voucher request time present\"] = jsonData.requestTime !== null;\n\nvar originator = jsonData.originator;\ntests[\"Originator present\"] = originator !== null;\ntests[\"Originator Merchant present\"] = originator.merchant !== null;\ntests[\"Originator Institution present\"] = originator.institution !== null;\ntests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");\n\nvar merchant = originator.merchant;\ntests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");\ntests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");\ntests[\"Merchant name present\"] = merchant.merchantName !== null;\n\nvar merchantName = merchant.merchantName;\ntests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");\ntests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");\ntests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");\ntests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");\n\nvar originatorInst = originator.institution;\ntests[\"Originator institution present\"] = originatorInst !== null;\ntests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");\ntests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");\n\nvar settlementEntity = jsonData.settlementEntity;\ntests[\"Settlement Entity institution present\"] = settlementEntity !== null;\ntests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;\ntests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;\n\nvar receiver = jsonData.receiver;\ntests[\"Receiver institution present\"] = receiver !== null;\ntests[\"Receiver institution ID present\"] = receiver.id !== null;\ntests[\"Receiver institution name present\"] = receiver.name !== null;\n\nvar thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;\ntests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA==",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"description": "Voucher provision request"
					},
					"response": []
				}
			]
		},
		{
			"name": "Reversals",
			"description": "",
			"item": [
				{
					"name": "Provision request",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\n\nvar thirdPartyIds = jsonData.thirdPartyIdentifiers\npostman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar requestId = uuid();\npostman.setEnvironmentVariable(\"requestId\", requestId);\n\nvar uuidLast4 = requestId.substr(requestId.length-4, 4);\n\npostman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());\npostman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", dateTime);\npostman.setEnvironmentVariable(\"requestTime\", dateTime);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"paymentMethods\" : [\n        {\n            \"type\": \"{{an32TokenPaymentType}}\",\n            \"name\": \"{{an32TokenPaymentName}}\",\n            \"amount\": {\n                \"amount\": {{airtimePaymentAmount}},\n                \"currency\": \"{{randCurrencyCode}}\"\n            },\n            \"token\": \"{{an32Token}}\"\n        }\n    ]\n}"
						},
						"description": "Voucher provision request"
					},
					"response": []
				},
				{
					"name": "Reversal of prior provision copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");\ntests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");\ntests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");\ntests[\"Third party identifiers\"] = jsonData.id !== null;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n   }\n\nfunction uuid() {\n   \n   return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar reversalId = uuid();\npostman.setEnvironmentVariable(\"reversalId\", reversalId);\n\nvar timestamp = new Date().toISOString();\npostman.setEnvironmentVariable(\"timestamp\", timestamp);"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"username": "{{clientInstId}}",
								"password": "password",
								"saveHelperData": true,
								"showPassword": false
							}
						},
						"url": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
						},
						"description": "Voucher reversal advice"
					},
					"response": []
				}
			]
		}
	]
}