{
	"info": {
		"name": "Airtime",
		"_postman_id": "d82ca5d2-c2a2-fd86-820d-6eac07aafdac",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Voucher Model",
			"description": "",
			"item": [
				{
					"name": "Voucher Confirmations",
					"description": "Voucher confirmations",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Error responses",
					"item": [
						{
							"name": "Reversal of non-provisioned voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"var errorDetail = JSON.parse(responseBody);",
											"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
											"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Reversal ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request Type correct\"] = errorDetail.requestType === \"VOUCHER_REVERSAL\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								},
								"description": "Voucher reversal advice for a provision which was never processed by the vendor."
							},
							"response": []
						},
						{
							"name": "Confirmation of non-provisioned voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"var errorDetail = JSON.parse(responseBody);",
											"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
											"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Confirmation ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request Type correct\"] = errorDetail.requestType === \"VOUCHER_CONFIRMATION\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"123\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								},
								"description": "Failed attempt to confirm a voucher which wasn't provisioned."
							},
							"response": []
						},
						{
							"name": "Provision request copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Reversal of confirmed voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is ACCOUNT_ALREADY_SETTLED\"] = jsonData.errorType === \"ACCOUNT_ALREADY_SETTLED\";",
											"tests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REVERSAL\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								},
								"description": "Failed attempt to reverse a voucher which has been confirmed."
							},
							"response": []
						},
						{
							"name": "Provision request copy copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Reversal of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								},
								"description": "Voucher reversal"
							},
							"response": []
						},
						{
							"name": "Confirmation of reversed voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is ACCOUNT_ALREADY_SETTLED\"] = jsonData.errorType === \"ACCOUNT_ALREADY_SETTLED\";",
											"tests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_CONFIRMATION\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								},
								"description": "Failed attempt to confirm a reversed voucher."
							},
							"response": []
						},
						{
							"name": "Duplicate provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is DUPLICATE_RECORD\"] = jsonData.errorType === \"DUPLICATE_RECORD\";",
											"tests[\"No original ID returned\"] = jsonData.originalId == null;",
											"tests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"//don't update the UUID for this test",
											"//postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								},
								"description": "Voucher provision request with a non-unique UUID"
							},
							"response": []
						},
						{
							"name": "Username Client.Id mismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"No original ID returned\"] = jsonData.originalId == null;",
											"tests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"VOUCHER_REQUEST\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "wrongUsername",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic d3JvbmdVc2VybmFtZTpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								},
								"description": "Voucher provision request which mismatched HTTP Basic Auth username and Client.Id"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Missing field tests",
					"description": "Messages intended to test that the server correctly identifies a missing field in a message to the server.",
					"item": [
						{
							"name": "Missing voucher ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae01840c-eacf-4559-a3c6-b0c16f71d3cc",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df6938a2-1de9-43bf-b4d5-1ebecfb30027",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa0a289b-f5c2-4c1e-a0ea-1719f3f179ff",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"product may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "96816bba-2be6-4f41-ab6c-32c7cbf93829",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing product.productId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2333686-677c-4081-9540-45fa028f4fc4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"product.productId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b8594cac-876f-4e74-bfd3-505246584815",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f46b99a6-3cd7-4125-a52c-be8f80249b94",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a153629e-0349-4cc9-a942-707c3aaea316",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e85bd24-f5e2-4182-884f-f2912bb4372c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "07e98f24-6f29-4017-81c6-f5a00d5c7411",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "532bacbf-a351-464f-ac8c-f47efa85aae4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "243250f5-ba10-436d-9bdd-908a848260da",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7610ef0-7256-49a7-b82d-47309b10ec19",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0d107e75-4d7a-4edc-aa6a-2de2f63284e1",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f26317a-703b-4fe5-960e-2b7cb3f75c6d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ad867204-bfe3-4849-a7f1-df959d6638e3",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\"\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d86cda0-3a18-4b04-9660-57025727f05e",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.name may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0b4d47c9-4e07-460f-a8e9-22ac2a74193f",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "392b1498-4935-46d9-a95d-b565c098cef0",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.city may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ca400dbf-dde1-45f0-bdee-ad2644a34b36",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.region",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b163b054-b04d-415c-af1c-141f3108f630",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.region may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e127cd7b-4ca4-41e8-860a-1b295d8c8f35",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0b1e64-ec66-4736-a770-63124891da77",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.country may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "485da880-3154-4c21-9149-1aae8bd5e6da",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17fa6f3c-e970-4e08-823f-e18f77c92c11",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantType may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a183ddd-a570-4ea2-97ac-33c37fedb552",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.terminalId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7ca689b-ed5f-4f5e-9eb3-f955eabac2a7",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.terminalId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3edfa005-9fb6-49af-8eb1-341e1f1dacf7",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6551c880-dabe-4712-a088-257845681acf",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c72875f3-56db-4561-b27d-00d530c2e7de",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea5d1009-27fb-4205-8de3-445ff376e175",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a2c1b48-4da8-49f8-9aa5-1fd6fde94516",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79164c93-9e6e-45a3-9301-030c7c04bad3",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.name may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68026678-3096-4e8b-a686-79f01c1775f4",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f83dcded-18fe-4d00-a5dd-627c41127714",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a5175f66-c2a8-4fb5-b3f8-1217372f81e9",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "247db5a9-3667-45e2-a02e-8217456f7fa7",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de4aa68c-6e0b-4794-b8d9-1f12462bd10f",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.name may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2232ccf9-99c5-411f-8abf-dbfc31a00359",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f1bfd6bb-3ac9-4603-9b8f-fd0977d80ad0",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae4b1b48-8aa0-4414-b43c-b8ad1dfba99f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0cbed0df-a5fd-4760-8ef1-68cb8662c916",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "437e9e49-34f2-496a-bd62-cc0c7bae229b",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16bebee5-d288-4426-80f8-c7bdce63c1ef",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f1a8531-2b30-4773-9b3b-b0ad1f7afc56",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"reversalReason may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68e556a2-c3d6-4cad-bb71-c916e291576a",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c67e74e-08f7-4d80-a5dd-84db3dd7eecb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e9e45d93-82bd-4659-95b7-11b064d3af3b",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15606a94-81b1-45d9-abaa-a8881af5d05a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b9d006af-ca0c-4e83-82b7-b77bddb8a7d8",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f97abe41-d957-4f92-a505-d64076f64d34",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f8dac0d6-887a-4011-9878-24c479bae80b",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation voucher serial number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1173088-5e39-4ed6-b159-d34e6087b285",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"voucher.serialNumber may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "479d8106-7b58-472a-8d3d-e749b2e745ea",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Provisions",
					"item": [
						{
							"name": "Minimalist provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Voucher ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"",
											"var voucher = jsonData.voucher;",
											"tests[\"Voucher present\"] = voucher !== null;",
											"tests[\"Voucher serial number present\"] = voucher.serialNumber !== null;",
											"tests[\"Voucher pin present\"] = voucher.pin !== null;",
											"tests[\"Voucher request time present\"] = jsonData.requestTime !== null;",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var merchant = originator.merchant;",
											"tests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");",
											"tests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");",
											"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
											"",
											"var merchantName = merchant.merchantName;",
											"tests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");",
											"tests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");",
											"tests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");",
											"tests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");",
											"",
											"var originatorInst = originator.institution;",
											"tests[\"Originator institution present\"] = originatorInst !== null;",
											"tests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");",
											"tests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
											"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
											"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
											"",
											"var receiver = jsonData.receiver;",
											"tests[\"Receiver institution present\"] = receiver !== null;",
											"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
											"tests[\"Receiver institution name present\"] = receiver.name !== null;",
											"",
											"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
											"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Reversals",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Reversal of prior provision copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								},
								"description": "Voucher reversal advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Purchase Model",
			"description": "",
			"item": [
				{
					"name": "Purchase request",
					"description": "",
					"item": [
						{
							"name": "Purchase request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "93bcde49-1b0a-4bd1-a4b5-a4ef6554b1fd",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Purchase Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"",
											"var voucher = jsonData.voucher;",
											"tests[\"Voucher present\"] = voucher !== null;",
											"tests[\"Voucher serial number present\"] = voucher.serialNumber !== null;",
											"tests[\"Voucher pin present\"] = voucher.pin !== null;",
											"tests[\"Voucher request time present\"] = jsonData.requestTime !== null;",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var merchant = originator.merchant;",
											"tests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");",
											"tests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");",
											"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
											"",
											"var merchantName = merchant.merchantName;",
											"tests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");",
											"tests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");",
											"tests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");",
											"tests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");",
											"",
											"var originatorInst = originator.institution;",
											"tests[\"Originator institution present\"] = originatorInst !== null;",
											"tests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");",
											"tests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
											"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
											"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
											"",
											"var receiver = jsonData.receiver;",
											"tests[\"Receiver institution present\"] = receiver !== null;",
											"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
											"tests[\"Receiver institution name present\"] = receiver.name !== null;",
											"",
											"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
											"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1186a1b6-1632-4eee-b8fe-dc4b4fde9dd8",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Confirmations",
					"description": "Voucher confirmations",
					"item": [
						{
							"name": "Purchase request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4a97318-73c2-4928-9fac-a41c17b5cc30",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"postman.setEnvironmentVariable(\"purchaseRef\", settlementEntity.id);",
											"postman.setEnvironmentVariable(\"purchaseRefProvider\", settlementEntity.name);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "470f696f-08cc-4423-bf49-74b49c6d15ff",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Reversals",
					"item": [
						{
							"name": "Purchase request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83f7d5dc-dc63-49f8-9785-5d7f912ef479",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"postman.setEnvironmentVariable(\"purchaseRef\", settlementEntity.id);",
											"postman.setEnvironmentVariable(\"purchaseRefProvider\", settlementEntity.name);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "abfdd259-d03f-4d2c-8fb0-b5e46dbcfb9a",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										""
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Reversal of prior purchase request",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"reversals"
									]
								},
								"description": "Voucher reversal advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Status",
					"description": "",
					"item": [
						{
							"name": "Purchase request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e4a97318-73c2-4928-9fac-a41c17b5cc30",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"postman.setEnvironmentVariable(\"purchaseRef\", settlementEntity.id);",
											"postman.setEnvironmentVariable(\"purchaseRefProvider\", settlementEntity.name);"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "470f696f-08cc-4423-bf49-74b49c6d15ff",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Purchase Status - Original msg id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2857edf3-a528-4e80-80a5-3f9acf3a5b1a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Purchase Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"",
											"var voucher = jsonData.voucher;",
											"tests[\"Voucher present\"] = voucher !== null;",
											"tests[\"Voucher serial number present\"] = voucher.serialNumber !== null;",
											"tests[\"Voucher pin present\"] = voucher.pin !== null;",
											"tests[\"Voucher request time present\"] = jsonData.requestTime !== null;",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var merchant = originator.merchant;",
											"tests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");",
											"tests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");",
											"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
											"",
											"var merchantName = merchant.merchantName;",
											"tests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");",
											"tests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");",
											"tests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");",
											"tests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");",
											"",
											"var originatorInst = originator.institution;",
											"tests[\"Originator institution present\"] = originatorInst !== null;",
											"tests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");",
											"tests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
											"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
											"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
											"",
											"var receiver = jsonData.receiver;",
											"tests[\"Receiver institution present\"] = receiver !== null;",
											"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
											"tests[\"Receiver institution name present\"] = receiver.name !== null;",
											"",
											"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
											"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "83ced302-2272-4c69-a29d-69bb02a1602c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/status?originalMsgId={{requestId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"status"
									],
									"query": [
										{
											"key": "originalMsgId",
											"value": "{{requestId}}",
											"equals": true
										}
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Purchase Status - Purchase Ref",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9262233d-e17c-4ce4-a044-6080da652bd1",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Purchase Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"",
											"var voucher = jsonData.voucher;",
											"tests[\"Voucher present\"] = voucher !== null;",
											"tests[\"Voucher serial number present\"] = voucher.serialNumber !== null;",
											"tests[\"Voucher pin present\"] = voucher.pin !== null;",
											"tests[\"Voucher request time present\"] = jsonData.requestTime !== null;",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var merchant = originator.merchant;",
											"tests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");",
											"tests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");",
											"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
											"",
											"var merchantName = merchant.merchantName;",
											"tests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");",
											"tests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");",
											"tests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");",
											"tests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");",
											"",
											"var originatorInst = originator.institution;",
											"tests[\"Originator institution present\"] = originatorInst !== null;",
											"tests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");",
											"tests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
											"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
											"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
											"",
											"var receiver = jsonData.receiver;",
											"tests[\"Receiver institution present\"] = receiver !== null;",
											"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
											"tests[\"Receiver institution name present\"] = receiver.name !== null;",
											"",
											"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
											"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e1af45bc-bcf9-450b-a645-73efacee2e5c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/status?purchaseReference={{purchaseRef}}&provider={{purchaseRefProvider}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"status"
									],
									"query": [
										{
											"key": "purchaseReference",
											"value": "{{purchaseRef}}",
											"equals": true
										},
										{
											"key": "provider",
											"value": "{{purchaseRefProvider}}",
											"equals": true
										}
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Missing field tests",
					"description": "Messages intended to test that the server correctly identifies a missing field in a message to the server.",
					"item": [
						{
							"name": "Missing product",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "37ac071d-65d7-4918-87a6-807f10b62f1a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"product may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7aaaa85a-3920-483b-a6bb-fed2d3e4038c",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing product.productId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "422e9775-2c57-431e-9d8f-de8fe1319c0c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"product.productId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b1a2589-946f-4678-9303-f463e207abe7",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0364d935-6249-4596-a4a4-96bbd78ab0c7",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e0820fa8-d419-4159-9986-7c70e0574c61",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcd5e29d-0678-48f9-888e-d1682298d10c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c7361eba-2674-47b1-9519-531a15df0814",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1dd19efb-9604-4b7f-a5b7-2eddcb5a1ddd",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c3238421-e09b-4e49-b737-46a5a90dd1c8",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83fad5fa-0c03-403c-9113-cb4ffcacf4ff",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1c57a0c9-ed06-438e-a120-c1e3ce474b1a",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "478ecc51-beb4-406c-afd8-a3552a167c0f",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ead6e9c1-acbd-4b8f-81de-34f110d7a1c3",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\"\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9087dec0-c115-47b7-a6c0-ae8d29b9bfb9",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.name may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6c3f56ba-68b9-455b-b813-f5b95daa9484",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4085fe6c-98a1-4b33-9136-d9f9f29d8b89",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.city may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7de151a6-39ca-4a9a-8488-ee91b067f17b",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.region",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e36ce092-4e2f-460c-bded-756d667b3096",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.region may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c68e9cad-1cb6-4fa5-bcef-61309e3c4f41",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2401d10c-657d-4dbb-af68-86a6b5f3cd42",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.country may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3d0de798-9483-4d03-90c7-1d4bd33cb3ad",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7855e957-3de9-4130-beed-2ab6b98ca2ba",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantType may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "62dd7471-71b9-4598-9c87-1eaa395d48b6",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.terminalId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28e89f81-f807-4dd0-99ca-8537c5f3af00",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.terminalId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "07f8ecd8-c3fe-4637-89b4-97b92192e7a1",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b2f5a1e-930d-4f52-9e41-9a2727dd8bb3",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2acf57c0-5bb2-4bdf-9efa-a052e6ae71d5",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "54152114-0a9d-415b-ac14-8fa7ee965a9c",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d5b90928-0cb9-4640-ba7b-e65868832e3c",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0e57d75-908b-43df-a44a-b4ebca33135a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.name may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e9bd5585-f722-4c10-923b-7dbcc44caec6",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "126f8376-7e82-4e1b-b314-b5aeb2313bda",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0c8f5c40-1c3f-4a75-986c-c44011395609",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6119ca69-d930-4444-9cbb-11c773b75da7",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a65be5cd-5667-456f-9668-495846103e42",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "314a1db4-9892-485a-8f7a-2c2248b37102",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.name may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "121ff8e6-6ebc-4bd3-90f8-9acd30ecc2a5",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab77cfe3-f5c8-456c-b931-d332f42cf1a2",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c90bb184-faaa-4bd4-af6e-cf52128d21f6",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5610d6ee-30f5-4dfc-a31a-1a62f61e28a8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "511b8f1d-25b0-474e-895d-ce762ce53ecb",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "52715382-4e32-4b75-83f8-5bf776f0d2c7",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a57b92a9-02c4-4b35-9152-aeca9c82ef33",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6bf329c-7be0-4e36-975e-99503c3187d4",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"reversalReason may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ab45084c-56e3-439e-9ff5-93e4f4a19210",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"product\": {\n            \"productId\": \"{{fixedPriceProduct}}\"\n        },\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50ba2bd3-34f6-44af-9e5d-1136094b57cc",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4afaaf2e-876f-4624-a457-815255636bbc",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "24e6f6a5-ec93-4c68-8dd1-d4e8fc09f53d",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ac567755-8cd2-4a18-b7cf-aab6848db761",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f715bc37-1eb3-49e4-801c-ec731db94261",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9db7c720-2033-4e11-b804-3a2120f1d9e0",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing Purchase Ref",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2476690d-a086-4842-aa8c-236d7335aada",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorMessage !== null;",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"PURCHASE_STATUS_REQUEST\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e1af45bc-bcf9-450b-a645-73efacee2e5c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/status?provider={{purchaseRefProvider}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"status"
									],
									"query": [
										{
											"key": "provider",
											"value": "{{purchaseRefProvider}}",
											"equals": true
										}
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Missing provider",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorMessage !== null;",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"PURCHASE_STATUS_REQUEST\";"
										],
										"id": "2476690d-a086-4842-aa8c-236d7335aada",
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "e1af45bc-bcf9-450b-a645-73efacee2e5c",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases/status?purchaseReference={{purchaseRef}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases",
										"status"
									],
									"query": [
										{
											"key": "purchaseReference",
											"value": "{{purchaseRef}}",
											"equals": true
										}
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Purchase Error responses",
					"item": [
						{
							"name": "Unable to Locate Record",
							"description": "",
							"item": [
								{
									"name": "Reversal of non-provisioned purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f4a680ee-98b7-4928-bc51-60717fd3c601",
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 404\"] = responseCode.code === 404;",
													"",
													"var errorDetail = JSON.parse(responseBody);",
													"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
													"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");",
													"tests[\"Reversal ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"reversalId\");",
													"tests[\"Request Type correct\"] = errorDetail.requestType === \"PURCHASE_REVERSAL\";"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "7f91e4e3-4100-4387-91c2-c3144017161e",
												"type": "text/javascript",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"var reversalId = uuid();",
													"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
													"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"reversals"
											]
										},
										"description": "Voucher reversal advice for a provision which was never processed by the vendor."
									},
									"response": []
								},
								{
									"name": "Confirmation of non-provisioned purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "077170c1-32ea-4397-a9dc-c5fa93ed2751",
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 404\"] = responseCode.code === 404;",
													"",
													"var errorDetail = JSON.parse(responseBody);",
													"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
													"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");",
													"tests[\"Confirmation ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Request Type correct\"] = errorDetail.requestType === \"PURCHASE_CONFIRMATION\";"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26f6444f-4467-4383-a3d3-d56b0a829c7b",
												"type": "text/javascript",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"123\"\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"confirmations"
											]
										},
										"description": "Failed attempt to confirm a voucher which wasn't provisioned."
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Can't reverse finalized transaction",
							"description": "",
							"item": [
								{
									"name": "Purchase request",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
													"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
													"",
													"var voucher = jsonData.voucher;",
													"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
													"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Reversal of confirmed purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6a9d542e-b24e-479c-9742-5ab835b32c46",
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Error type is ACCOUNT_ALREADY_SETTLED\"] = jsonData.errorType === \"ACCOUNT_ALREADY_SETTLED\";",
													"tests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");",
													"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
													"tests[\"Request Type correct\"] = jsonData.requestType === \"PURCHASE_REVERSAL\";"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d60ba523-dcd7-4744-bc9c-beb0997c7360",
												"type": "text/javascript",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var reversalId = uuid();",
													"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"reversals"
											]
										},
										"description": "Failed attempt to reverse a voucher which has been confirmed."
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Can't finalize reversed transaction",
							"description": "",
							"item": [
								{
									"name": "Purchase request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
													"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
													"",
													"var voucher = jsonData.voucher;",
													"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
													"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Reversal of prior purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var reversalId = uuid();",
													"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"reversals"
											]
										},
										"description": "Voucher reversal"
									},
									"response": []
								},
								{
									"name": "Confirmation of reversed purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "348628b0-54dc-416e-827f-2b19ba3c6eca",
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Error type is ACCOUNT_ALREADY_SETTLED\"] = jsonData.errorType === \"ACCOUNT_ALREADY_SETTLED\";",
													"tests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");",
													"tests[\"Request Type correct\"] = jsonData.requestType === \"PURCHASE_CONFIRMATION\";"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cf8d33c4-e9e3-4d15-8c33-5f0c1f2b193d",
												"type": "text/javascript",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"confirmations"
											]
										},
										"description": "Failed attempt to confirm a reversed voucher."
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Status of reversed transaction",
							"description": "",
							"item": [
								{
									"name": "Purchase request",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
													"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
													"",
													"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
													"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
													"",
													"var voucher = jsonData.voucher;",
													"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
													"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Reversal of prior purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var reversalId = uuid();",
													"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/reversals",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"reversals"
											]
										},
										"description": "Voucher reversal"
									},
									"response": []
								},
								{
									"name": "Purchase Status of reversed purchase",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d92e263-539a-4a7f-a03d-199dfffb5480",
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Error type is ACCOUNT_ALREADY_SETTLED\"] = jsonData.errorType === \"ACCOUNT_ALREADY_SETTLED\";",
													"tests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");",
													"tests[\"Request Type correct\"] = jsonData.requestType === \"PURCHASE_STATUS_REQUEST\";"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "83ced302-2272-4c69-a29d-69bb02a1602c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/airtime/{{version}}/purchases/status?originalMsgId={{requestId}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"airtime",
												"{{version}}",
												"purchases",
												"status"
											],
											"query": [
												{
													"key": "originalMsgId",
													"value": "{{requestId}}",
													"equals": true
												}
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Duplicate purchase request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50c45285-30ac-474f-8763-e5f524b209e8",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is DUPLICATE_RECORD\"] = jsonData.errorType === \"DUPLICATE_RECORD\";",
											"tests[\"No original ID returned\"] = jsonData.originalId == null;",
											"tests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"PURCHASE_REQUEST\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "07100ddd-fb41-45f4-8602-e52e351c78da",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"//don't update the UUID for this test",
											"//postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								},
								"description": "Voucher provision request with a non-unique UUID"
							},
							"response": []
						},
						{
							"name": "Username Client.Id mismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7dc7f0b8-6336-4fb5-94ef-7bfce0ffd6ae",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"No original ID returned\"] = jsonData.originalId == null;",
											"tests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Request Type correct\"] = jsonData.requestType === \"PURCHASE_REQUEST\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c42ada73-63e2-4612-ae5d-332f3b4a84b8",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "wrongUsername",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic d3JvbmdVc2VybmFtZTpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/purchases",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"purchases"
									]
								},
								"description": "Voucher provision request which mismatched HTTP Basic Auth username and Client.Id"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Msisdn Model",
			"description": "",
			"item": [
				{
					"name": "MsisdnInfo - Promotion + Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "13d00507-f385-4d65-9a79-4b26c493c663",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var msisdn = jsonData.msisdn;",
									"tests[\"Msisdn present\"] = msisdn !== null;",
									"tests[\"Msisdn number present\"] = msisdn.msisdn === postman.getEnvironmentVariable(\"msisdnExampleOne\");",
									"tests[\"Msisdn country present\"] = msisdn.country !== null;",
									"",
									"var operator = msisdn.operator;",
									"tests[\"operator present\"] = operator !== null;",
									"tests[\"operator id present\"] = operator.id !== null;",
									"tests[\"operator name present\"] = operator.name !== null;",
									"",
									"var promotion = jsonData.promotion;",
									"tests[\"promotion present\"] = promotion !== null;",
									"tests[\"promotion start date present\"] = promotion.startDate !== null;",
									"tests[\"promotion end date present\"] = promotion.endDate !== null;",
									"",
									"var availableProducts = jsonData.availableProducts;",
									"",
									"//Product One tests",
									"var product = availableProducts[0];",
									"tests[\"product present 0 \"] = product !== null;",
									"tests[\"product id present\"] = product.productId !== null;",
									"tests[\"product name present\"] = product.name !== null;",
									"tests[\"product type present\"] = product.type !== null;",
									"",
									"var wholesalePriceOne = product.wholesalePrice;",
									"tests[\"wholesalePrice present\"] = wholesalePriceOne !== null;",
									"tests[\"wholesalePrice amount present\"] = wholesalePriceOne.amount !== null;",
									"tests[\"wholesalePrice currency present\"] = wholesalePriceOne.currency !== null;",
									"",
									"var recipientAmounteOne = product.recipientAmount;",
									"tests[\"recipientAmount present\"] = recipientAmounteOne !== null;",
									"tests[\"recipientAmount amount present\"] = recipientAmounteOne.amount !== null;",
									"tests[\"recipientAmount currency present\"] = recipientAmounteOne.currency !== null;",
									"",
									"var productValuesOne = product.productValues;",
									"tests[\"productValues 1 present\"] = productValuesOne[0] !== null;",
									"tests[\"productValues 2 present\"] = productValuesOne[1] !== null;",
									"",
									"tests[\"productValues 1 amount present\"] = productValuesOne[0].amount !== null;",
									"tests[\"productValues 1 currency present\"] = productValuesOne[0].currency !== null;",
									"",
									"tests[\"productValues 2 amount present\"] = productValuesOne[1].amount !== null;",
									"tests[\"productValues 2 currency present\"] = productValuesOne[1].currency !== null;",
									"",
									"//Product Two tests",
									"product = availableProducts[1];",
									"tests[\"product present 1\"] = product !== null;",
									"tests[\"product id present\"] = product.productId !== null;",
									"tests[\"product name present\"] = product.name !== null;",
									"tests[\"product type present\"] = product.type !== null;",
									"",
									"var wholesalePriceOne = product.wholesalePrice;",
									"tests[\"wholesalePrice present\"] = wholesalePriceOne !== null;",
									"tests[\"wholesalePrice amount present\"] = wholesalePriceOne.amount !== null;",
									"tests[\"wholesalePrice currency present\"] = wholesalePriceOne.currency !== null;",
									"",
									"var recipientAmounteOne = product.recipientAmount;",
									"tests[\"recipientAmount present\"] = recipientAmounteOne !== null;",
									"tests[\"recipientAmount amount present\"] = recipientAmounteOne.amount !== null;",
									"tests[\"recipientAmount currency present\"] = recipientAmounteOne.currency !== null;",
									"",
									"var productValuesOne = product.productValues;",
									"tests[\"productValues 1 present\"] = productValuesOne[0] !== null;",
									"tests[\"productValues 2 present\"] = productValuesOne[1] !== null;",
									"",
									"tests[\"productValues 1 amount present\"] = productValuesOne[0].amount !== null;",
									"tests[\"productValues 1 currency present\"] = productValuesOne[0].currency !== null;",
									"",
									"tests[\"productValues 2 amount present\"] = productValuesOne[1].amount !== null;",
									"tests[\"productValues 2 currency present\"] = productValuesOne[1].currency !== null;"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7d239d4d-8db1-41c5-a21a-89be61008c93",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{clientInstId}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/airtime/{{version}}/msisdn?msisdn={{msisdnExampleOne}}&operator=transferTo",
							"host": [
								"{{host}}"
							],
							"path": [
								"airtime",
								"{{version}}",
								"msisdn"
							],
							"query": [
								{
									"key": "msisdn",
									"value": "{{msisdnExampleOne}}",
									"equals": true
								},
								{
									"key": "operator",
									"value": "transferTo",
									"equals": true
								}
							]
						},
						"description": "Voucher provision request"
					},
					"response": []
				},
				{
					"name": "MsisdnInfo - Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec7b28b7-20c8-4eb4-a9c0-517c0d8d3848",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var msisdn = jsonData.msisdn;",
									"tests[\"Msisdn present\"] = msisdn !== null;",
									"tests[\"Msisdn number present\"] = msisdn.msisdn === postman.getEnvironmentVariable(\"msisdnExampleTwo\");",
									"tests[\"Msisdn country present\"] = msisdn.country !== null;",
									"",
									"var operator = msisdn.operator;",
									"tests[\"operator present\"] = operator !== null;",
									"tests[\"operator id present\"] = operator.id !== null;",
									"tests[\"operator name present\"] = operator.name !== null;",
									"",
									"var availableProducts = jsonData.availableProducts;",
									"",
									"//Product One tests",
									"var product = availableProducts[0];",
									"tests[\"product present 0 \"] = product !== null;",
									"tests[\"product id present\"] = product.productId !== null;",
									"tests[\"product name present\"] = product.name !== null;",
									"tests[\"product type present\"] = product.type !== null;",
									"",
									"var wholesalePriceOne = product.wholesalePrice;",
									"tests[\"wholesalePrice present\"] = wholesalePriceOne !== null;",
									"tests[\"wholesalePrice amount present\"] = wholesalePriceOne.amount !== null;",
									"tests[\"wholesalePrice currency present\"] = wholesalePriceOne.currency !== null;",
									"",
									"var recipientAmounteOne = product.recipientAmount;",
									"tests[\"recipientAmount present\"] = recipientAmounteOne !== null;",
									"tests[\"recipientAmount amount present\"] = recipientAmounteOne.amount !== null;",
									"tests[\"recipientAmount currency present\"] = recipientAmounteOne.currency !== null;",
									"",
									"var productValuesOne = product.productValues;",
									"tests[\"productValues 1 present\"] = productValuesOne[0] !== null;",
									"tests[\"productValues 2 present\"] = productValuesOne[1] !== null;",
									"",
									"tests[\"productValues 1 amount present\"] = productValuesOne[0].amount !== null;",
									"tests[\"productValues 1 currency present\"] = productValuesOne[0].currency !== null;",
									"",
									"tests[\"productValues 2 amount present\"] = productValuesOne[1].amount !== null;",
									"tests[\"productValues 2 currency present\"] = productValuesOne[1].currency !== null;",
									"",
									"//Product Two tests",
									"product = availableProducts[1];",
									"tests[\"product present 1\"] = product !== null;",
									"tests[\"product id present\"] = product.productId !== null;",
									"tests[\"product name present\"] = product.name !== null;",
									"tests[\"product type present\"] = product.type !== null;",
									"",
									"var wholesalePriceOne = product.wholesalePrice;",
									"tests[\"wholesalePrice present\"] = wholesalePriceOne !== null;",
									"tests[\"wholesalePrice amount present\"] = wholesalePriceOne.amount !== null;",
									"tests[\"wholesalePrice currency present\"] = wholesalePriceOne.currency !== null;",
									"",
									"var recipientAmounteOne = product.recipientAmount;",
									"tests[\"recipientAmount present\"] = recipientAmounteOne !== null;",
									"tests[\"recipientAmount amount present\"] = recipientAmounteOne.amount !== null;",
									"tests[\"recipientAmount currency present\"] = recipientAmounteOne.currency !== null;",
									"",
									"var productValuesOne = product.productValues;",
									"tests[\"productValues 1 present\"] = productValuesOne[0] !== null;",
									"tests[\"productValues 2 present\"] = productValuesOne[1] !== null;",
									"",
									"tests[\"productValues 1 amount present\"] = productValuesOne[0].amount !== null;",
									"tests[\"productValues 1 currency present\"] = productValuesOne[0].currency !== null;",
									"",
									"tests[\"productValues 2 amount present\"] = productValuesOne[1].amount !== null;",
									"tests[\"productValues 2 currency present\"] = productValuesOne[1].currency !== null;",
									"",
									"//Product three tests",
									"product = availableProducts[2];",
									"tests[\"product present 2\"] = product !== null;",
									"tests[\"product id present\"] = product.productId !== null;",
									"tests[\"product name present\"] = product.name !== null;",
									"tests[\"product type present\"] = product.type !== null;",
									"",
									"var wholesalePriceOne = product.wholesalePrice;",
									"tests[\"wholesalePrice present\"] = wholesalePriceOne !== null;",
									"tests[\"wholesalePrice amount present\"] = wholesalePriceOne.amount !== null;",
									"tests[\"wholesalePrice currency present\"] = wholesalePriceOne.currency !== null;",
									"",
									"var recipientAmounteOne = product.recipientAmount;",
									"tests[\"recipientAmount present\"] = recipientAmounteOne !== null;",
									"tests[\"recipientAmount amount present\"] = recipientAmounteOne.amount !== null;",
									"tests[\"recipientAmount currency present\"] = recipientAmounteOne.currency !== null;",
									"",
									"var productValuesOne = product.productValues;",
									"tests[\"productValues 1 present\"] = productValuesOne[0] !== null;",
									"tests[\"productValues 2 present\"] = productValuesOne[1] !== null;",
									"",
									"tests[\"productValues 1 amount present\"] = productValuesOne[0].amount !== null;",
									"tests[\"productValues 1 currency present\"] = productValuesOne[0].currency !== null;",
									"",
									"tests[\"productValues 2 amount present\"] = productValuesOne[1].amount !== null;",
									"tests[\"productValues 2 currency present\"] = productValuesOne[1].currency !== null;",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "718cc9b8-9b6e-455b-a3ee-ab712e728c31",
								"type": "text/javascript",
								"exec": [
									"function _p8(s) {",
									"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
									"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
									"   }",
									"",
									"function uuid() {",
									"   ",
									"   return _p8() + _p8(true) + _p8(true) + _p8();",
									"}",
									"",
									"var requestId = uuid();",
									"postman.setEnvironmentVariable(\"requestId\", requestId);",
									"",
									"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
									"",
									"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
									"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
									"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
									"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
									"",
									"var dateTime = new Date().toISOString();",
									"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{clientInstId}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/airtime/{{version}}/msisdn?msisdn={{msisdnExampleTwo}}&operator=transferTo",
							"host": [
								"{{host}}"
							],
							"path": [
								"airtime",
								"{{version}}",
								"msisdn"
							],
							"query": [
								{
									"key": "msisdn",
									"value": "{{msisdnExampleTwo}}",
									"equals": true
								},
								{
									"key": "operator",
									"value": "transferTo",
									"equals": true
								}
							]
						},
						"description": "Voucher provision request"
					},
					"response": []
				},
				{
					"name": "MsisdnInfo - No products",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f13a144-96db-4820-8816-0cdc81d4f78b",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 202\"] = responseCode.code === 202;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var msisdn = jsonData.msisdn;",
									"tests[\"Msisdn present\"] = msisdn !== null;",
									"tests[\"Msisdn number present\"] = msisdn.msisdn === postman.getEnvironmentVariable(\"msisdnExampleThree\");",
									"tests[\"Msisdn country present\"] = msisdn.country !== null;",
									"",
									"var operator = msisdn.operator;",
									"tests[\"operator present\"] = operator !== null;",
									"tests[\"operator id present\"] = operator.id !== null;",
									"tests[\"operator name present\"] = operator.name !== null;",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4e6cd4cd-cd2f-4c2f-8e78-1e058fad8fc8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{clientInstId}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/airtime/{{version}}/msisdn?msisdn={{msisdnExampleThree}}&operator=transferTo",
							"host": [
								"{{host}}"
							],
							"path": [
								"airtime",
								"{{version}}",
								"msisdn"
							],
							"query": [
								{
									"key": "msisdn",
									"value": "{{msisdnExampleThree}}",
									"equals": true
								},
								{
									"key": "operator",
									"value": "transferTo",
									"equals": true
								}
							]
						},
						"description": "Voucher provision request"
					},
					"response": []
				},
				{
					"name": "MsisdnInfo - No Msisdn Error",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ff21de8-c187-4f50-a7a0-a6bda4718a70",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
									"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
									"var formatErrors = jsonData.detailMessage.formatErrors;",
									"tests[\"Correct Error message\"] = formatErrors[0].msg === \"query param msisdn may not be null\";"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4e6cd4cd-cd2f-4c2f-8e78-1e058fad8fc8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{clientInstId}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"value": true,
									"type": "boolean"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"product\": {\n        \"productId\": \"{{fixedPriceProduct}}\"\n    },\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{host}}/airtime/{{version}}/msisdn?operator=transferTo",
							"host": [
								"{{host}}"
							],
							"path": [
								"airtime",
								"{{version}}",
								"msisdn"
							],
							"query": [
								{
									"key": "operator",
									"value": "transferTo",
									"equals": true
								}
							]
						},
						"description": "Voucher provision request"
					},
					"response": []
				}
			]
		}
	]
}